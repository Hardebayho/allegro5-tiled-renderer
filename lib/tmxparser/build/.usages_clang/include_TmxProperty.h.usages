22 serialization::archive 15 0 0 0 0 85 /home/smallwondertech/Gamez/Allegro5TiledRenderer/Allegro5TiledRenderer/lib/tmxparser 91 /home/smallwondertech/Gamez/Allegro5TiledRenderer/Allegro5TiledRenderer/lib/tmxparser/build 0 0 350 0 0 0 79 //----------------------------------------------------------------------------- 1 1 1 80 18446744073709551615 16 // TmxProperty.h 2 1 2 17 18446744073709551615 2 // 3 1 3 3 18446744073709551615 34 // Copyright (c) 2016, Tamir Atias 4 1 4 35 18446744073709551615 23 // All rights reserved. 5 1 5 24 18446744073709551615 2 // 6 1 6 3 18446744073709551615 69 // Redistribution and use in source and binary forms, with or without 7 1 7 70 18446744073709551615 78 // modification, are permitted provided that the following conditions are met: 8 1 8 79 18446744073709551615 68 //  * Redistributions of source code must retain the above copyright 9 1 9 69 18446744073709551615 67 //    notice, this list of conditions and the following disclaimer. 10 1 10 68 18446744073709551615 71 //  * Redistributions in binary form must reproduce the above copyright 11 1 11 72 18446744073709551615 73 //    notice, this list of conditions and the following disclaimer in the 12 1 12 74 18446744073709551615 74 //    documentation and/or other materials provided with the distribution. 13 1 13 75 18446744073709551615 2 // 14 1 14 3 18446744073709551615 82 // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND 15 1 15 83 18446744073709551615 80 // ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED 16 1 16 81 18446744073709551615 73 // WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE 17 1 17 74 18446744073709551615 62 // DISCLAIMED. IN NO EVENT SHALL TAMIR ATIAS BE LIABLE FOR ANY 18 1 18 63 18446744073709551615 77 // DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES 19 1 19 78 18446744073709551615 79 // (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 20 1 20 80 18446744073709551615 78 // LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND 21 1 21 79 18446744073709551615 77 // ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT 22 1 22 78 18446744073709551615 80 // (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS 23 1 23 81 18446744073709551615 63 // SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. 24 1 24 64 18446744073709551615 2 // 25 1 25 3 18446744073709551615 22 // Author: Tamir Atias 26 1 26 23 18446744073709551615 79 //----------------------------------------------------------------------------- 27 1 27 80 18446744073709551615 1 # 28 1 28 2 18446744073709551615 6 pragma 28 2 28 8 18446744073709551615 4 once 28 9 28 13 18446744073709551615 1 # 30 1 30 2 18446744073709551615 7 include 30 2 30 9 18446744073709551615 1 < 30 10 30 11 18446744073709551615 6 string 30 11 30 17 18446744073709551615 1 > 30 17 30 18 18446744073709551615 1 # 31 1 31 2 18446744073709551615 7 include 31 2 31 9 18446744073709551615 12 "TmxColor.h" 31 10 31 22 18446744073709551615 9 namespace 33 1 33 10 18446744073709551615 8 tinyxml2 33 11 33 19 0 1 { 33 20 33 21 18446744073709551615 5 class 34 5 34 10 18446744073709551615 10 XMLElement 34 11 34 21 1 1 ; 34 21 34 22 18446744073709551615 1 } 35 1 35 2 18446744073709551615 9 namespace 37 1 37 10 18446744073709551615 3 Tmx 37 11 37 14 2 1 { 38 1 38 2 18446744073709551615 75 //------------------------------------------------------------------------- 39 5 39 80 18446744073709551615 27 /// The type of a property. 40 5 40 32 18446744073709551615 75 //------------------------------------------------------------------------- 41 5 41 80 18446744073709551615 4 enum 42 5 42 9 18446744073709551615 12 PropertyType 42 10 42 22 3 1 { 43 5 43 6 18446744073709551615 31 /// A string property (default) 44 9 44 40 18446744073709551615 19 TMX_PROPERTY_STRING 45 9 45 28 4 1 , 45 28 45 29 18446744073709551615 22 /// A boolean property 47 9 47 31 18446744073709551615 17 TMX_PROPERTY_BOOL 48 9 48 26 5 1 , 48 26 48 27 18446744073709551615 23 /// An integer property 50 9 50 32 18446744073709551615 16 TMX_PROPERTY_INT 51 9 51 25 6 1 , 51 25 51 26 18446744073709551615 29 /// A floating point property 53 9 53 38 18446744073709551615 18 TMX_PROPERTY_FLOAT 54 9 54 27 7 1 , 54 27 54 28 18446744073709551615 20 /// A color property 56 9 56 29 18446744073709551615 18 TMX_PROPERTY_COLOR 57 9 57 27 8 1 , 57 27 57 28 18446744073709551615 19 /// A file property 59 9 59 28 18446744073709551615 17 TMX_PROPERTY_FILE 60 9 60 26 9 1 } 61 5 61 6 18446744073709551615 1 ; 61 6 61 7 18446744073709551615 75 //------------------------------------------------------------------------- 63 5 63 80 18446744073709551615 37 /// Used to store a (typed) property. 64 5 64 42 18446744073709551615 75 //------------------------------------------------------------------------- 65 5 65 80 18446744073709551615 5 class 66 5 66 10 18446744073709551615 8 Property 66 11 66 19 10 1 { 67 5 67 6 18446744073709551615 6 public 68 5 68 11 18446744073709551615 1 : 68 11 68 12 18446744073709551615 8 Property 69 9 69 17 10 1 ( 69 17 69 18 10 1 ) 69 18 69 19 10 1 ; 69 19 69 20 18446744073709551615 31 /// Parse the property element. 71 9 71 40 18446744073709551615 4 void 72 9 72 13 18446744073709551615 5 Parse 72 14 72 19 11 1 ( 72 19 72 20 11 5 const 72 20 72 25 18446744073709551615 8 tinyxml2 72 26 72 34 0 2 :: 72 34 72 36 18446744073709551615 10 XMLElement 72 36 72 46 1 1 * 72 47 72 48 18446744073709551615 12 propertyElem 72 48 72 60 12 1 ) 72 60 72 61 11 1 ; 72 61 72 62 18446744073709551615 63 /// Get the type of the property (default: TMX_PROPERTY_STRING) 74 9 74 72 18446744073709551615 12 PropertyType 75 9 75 21 3 7 GetType 75 22 75 29 13 1 ( 75 29 75 30 13 1 ) 75 30 75 31 13 5 const 75 32 75 37 18446744073709551615 1 { 75 38 75 39 18446744073709551615 6 return 75 40 75 46 18446744073709551615 4 type 75 47 75 51 14 1 ; 75 51 75 52 18446744073709551615 1 } 75 53 75 54 18446744073709551615 47 /// Check if the property is of a certain type. 77 9 77 56 18446744073709551615 4 bool 78 9 78 13 18446744073709551615 8 IsOfType 78 14 78 22 15 1 ( 78 22 78 23 15 12 PropertyType 78 23 78 35 3 12 propertyType 78 36 78 48 16 1 ) 78 48 78 49 15 5 const 78 50 78 55 18446744073709551615 1 { 78 56 78 57 18446744073709551615 6 return 78 58 78 64 18446744073709551615 7 GetType 78 65 78 72 13 1 ( 78 72 78 73 13 1 ) 78 73 78 74 13 2 == 78 75 78 77 18446744073709551615 12 propertyType 78 78 78 90 16 1 ; 78 90 78 91 18446744073709551615 1 } 78 92 78 93 18446744073709551615 37 /// Return the value of the property. 80 9 80 46 18446744073709551615 5 const 81 9 81 14 18446744073709551615 3 std 81 15 81 18 17 2 :: 81 18 81 20 18 6 string 81 20 81 26 19 1 & 81 27 81 28 18 8 GetValue 81 28 81 36 18 1 ( 81 36 81 37 18 1 ) 81 37 81 38 18 5 const 81 39 81 44 18446744073709551615 1 { 81 45 81 46 18446744073709551615 6 return 81 47 81 53 18446744073709551615 5 value 81 54 81 59 20 1 ; 81 59 81 60 18446744073709551615 1 } 81 61 81 62 18446744073709551615 59 /// Return whether the value is empty or was not specified. 83 9 83 68 18446744073709551615 4 bool 84 9 84 13 18446744073709551615 12 IsValueEmpty 84 14 84 26 21 1 ( 84 26 84 27 21 1 ) 84 27 84 28 21 5 const 84 29 84 34 18446744073709551615 1 { 84 35 84 36 18446744073709551615 6 return 84 37 84 43 18446744073709551615 5 value 84 44 84 49 20 1 . 84 49 84 50 22 5 empty 84 50 84 55 22 1 ( 84 55 84 56 22 1 ) 84 56 84 57 22 1 ; 84 57 84 58 18446744073709551615 1 } 84 59 84 60 18446744073709551615 89 /// Convert the value to a boolean and return it (or the default value if not a boolean.) 86 9 86 98 18446744073709551615 4 bool 87 9 87 13 18446744073709551615 12 GetBoolValue 87 14 87 26 23 1 ( 87 26 87 27 23 4 bool 87 27 87 31 18446744073709551615 12 defaultValue 87 32 87 44 24 1 = 87 45 87 46 18446744073709551615 5 false 87 47 87 52 18446744073709551615 1 ) 87 52 87 53 23 5 const 87 54 87 59 18446744073709551615 1 ; 87 59 87 60 18446744073709551615 91 /// Convert the value to an integer and return it (or the default value if not an integer). 89 9 89 100 18446744073709551615 3 int 90 9 90 12 18446744073709551615 11 GetIntValue 90 13 90 24 25 1 ( 90 24 90 25 25 3 int 90 25 90 28 18446744073709551615 12 defaultValue 90 29 90 41 26 1 = 90 42 90 43 18446744073709551615 1 0 90 44 90 45 18446744073709551615 1 ) 90 45 90 46 25 5 const 90 47 90 52 18446744073709551615 1 ; 90 52 90 53 18446744073709551615 85 /// Convert the value to a float and return it (or the default value if not a float). 92 9 92 94 18446744073709551615 5 float 93 9 93 14 18446744073709551615 13 GetFloatValue 93 15 93 28 27 1 ( 93 28 93 29 27 5 float 93 29 93 34 18446744073709551615 12 defaultValue 93 35 93 47 28 1 = 93 48 93 49 18446744073709551615 4 0.0f 93 50 93 54 18446744073709551615 1 ) 93 54 93 55 27 5 const 93 56 93 61 18446744073709551615 1 ; 93 61 93 62 18446744073709551615 85 /// Convert the value to a color and return it (or the default value if not a color). 95 9 95 94 18446744073709551615 3 Tmx 96 9 96 12 2 2 :: 96 12 96 14 29 5 Color 96 14 96 19 30 13 GetColorValue 96 20 96 33 29 1 ( 96 33 96 34 29 3 Tmx 96 34 96 37 2 2 :: 96 37 96 39 18446744073709551615 5 Color 96 39 96 44 30 12 defaultValue 96 45 96 57 31 1 = 96 58 96 59 18446744073709551615 3 Tmx 96 60 96 63 2 2 :: 96 63 96 65 30 5 Color 96 65 96 70 30 1 ( 96 70 96 71 30 1 ) 96 71 96 72 30 1 ) 96 72 96 73 29 5 const 96 74 96 79 18446744073709551615 1 ; 96 79 96 80 18446744073709551615 7 private 97 5 97 12 18446744073709551615 1 : 97 12 97 13 18446744073709551615 12 PropertyType 98 9 98 21 3 4 type 98 22 98 26 14 1 ; 98 26 98 27 18446744073709551615 3 std 99 9 99 12 17 2 :: 99 12 99 14 18446744073709551615 6 string 99 14 99 20 19 5 value 99 21 99 26 20 1 ; 99 26 99 27 18446744073709551615 1 } 100 5 100 6 18446744073709551615 1 ; 100 6 100 7 18446744073709551615 6 inline 102 5 102 11 18446744073709551615 4 bool 102 12 102 16 18446744073709551615 8 Property 102 17 102 25 10 2 :: 102 25 102 27 23 12 GetBoolValue 102 27 102 39 23 1 ( 102 39 102 40 23 4 bool 102 40 102 44 18446744073709551615 12 defaultValue 102 45 102 57 32 1 ) 102 57 102 58 23 5 const 102 59 102 64 18446744073709551615 1 { 103 5 103 6 18446744073709551615 2 if 104 9 104 11 18446744073709551615 1 ( 104 12 104 13 18446744073709551615 1 ! 104 13 104 14 18446744073709551615 8 IsOfType 104 14 104 22 15 1 ( 104 22 104 23 15 17 TMX_PROPERTY_BOOL 104 23 104 40 5 1 ) 104 40 104 41 15 1 ) 104 41 104 42 18446744073709551615 6 return 105 13 105 19 18446744073709551615 12 defaultValue 105 20 105 32 32 1 ; 105 32 105 33 18446744073709551615 6 return 107 9 107 15 18446744073709551615 5 value 107 16 107 21 20 1 . 107 21 107 22 33 7 compare 107 22 107 29 33 1 ( 107 29 107 30 33 6 "true" 107 30 107 36 18446744073709551615 1 ) 107 36 107 37 33 2 == 107 38 107 40 18446744073709551615 1 0 107 41 107 42 18446744073709551615 1 ; 107 42 107 43 18446744073709551615 1 } 108 5 108 6 18446744073709551615 6 inline 110 5 110 11 18446744073709551615 3 int 110 12 110 15 18446744073709551615 8 Property 110 16 110 24 10 2 :: 110 24 110 26 25 11 GetIntValue 110 26 110 37 25 1 ( 110 37 110 38 25 3 int 110 38 110 41 18446744073709551615 12 defaultValue 110 42 110 54 34 1 ) 110 54 110 55 25 5 const 110 56 110 61 18446744073709551615 1 { 111 5 111 6 18446744073709551615 2 if 112 9 112 11 18446744073709551615 1 ( 112 12 112 13 18446744073709551615 1 ! 112 13 112 14 18446744073709551615 8 IsOfType 112 14 112 22 15 1 ( 112 22 112 23 15 16 TMX_PROPERTY_INT 112 23 112 39 6 1 ) 112 39 112 40 15 1 ) 112 40 112 41 18446744073709551615 6 return 113 13 113 19 18446744073709551615 12 defaultValue 113 20 113 32 34 1 ; 113 32 113 33 18446744073709551615 6 return 115 9 115 15 18446744073709551615 3 std 115 16 115 19 17 2 :: 115 19 115 21 35 4 stoi 115 21 115 25 35 1 ( 115 25 115 26 35 5 value 115 26 115 31 20 1 ) 115 31 115 32 35 1 ; 115 32 115 33 18446744073709551615 1 } 116 5 116 6 18446744073709551615 6 inline 118 5 118 11 18446744073709551615 5 float 118 12 118 17 18446744073709551615 8 Property 118 18 118 26 10 2 :: 118 26 118 28 27 13 GetFloatValue 118 28 118 41 27 1 ( 118 41 118 42 27 5 float 118 42 118 47 18446744073709551615 12 defaultValue 118 48 118 60 36 1 ) 118 60 118 61 27 5 const 118 62 118 67 18446744073709551615 1 { 119 5 119 6 18446744073709551615 2 if 120 9 120 11 18446744073709551615 1 ( 120 12 120 13 18446744073709551615 1 ! 120 13 120 14 18446744073709551615 8 IsOfType 120 14 120 22 15 1 ( 120 22 120 23 15 18 TMX_PROPERTY_FLOAT 120 23 120 41 7 1 ) 120 41 120 42 15 1 ) 120 42 120 43 18446744073709551615 6 return 121 13 121 19 18446744073709551615 12 defaultValue 121 20 121 32 36 1 ; 121 32 121 33 18446744073709551615 6 return 123 9 123 15 18446744073709551615 3 std 123 16 123 19 17 2 :: 123 19 123 21 37 4 stof 123 21 123 25 37 1 ( 123 25 123 26 37 5 value 123 26 123 31 20 1 ) 123 31 123 32 37 1 ; 123 32 123 33 18446744073709551615 1 } 124 5 124 6 18446744073709551615 6 inline 126 5 126 11 18446744073709551615 3 Tmx 126 12 126 15 2 2 :: 126 15 126 17 29 5 Color 126 17 126 22 30 8 Property 126 23 126 31 10 2 :: 126 31 126 33 29 13 GetColorValue 126 33 126 46 29 1 ( 126 46 126 47 29 3 Tmx 126 47 126 50 2 2 :: 126 50 126 52 18446744073709551615 5 Color 126 52 126 57 30 12 defaultValue 126 58 126 70 38 1 ) 126 70 126 71 29 5 const 126 72 126 77 18446744073709551615 1 { 127 5 127 6 18446744073709551615 2 if 128 9 128 11 18446744073709551615 1 ( 128 12 128 13 18446744073709551615 1 ! 128 13 128 14 18446744073709551615 8 IsOfType 128 14 128 22 15 1 ( 128 22 128 23 15 18 TMX_PROPERTY_COLOR 128 23 128 41 8 1 ) 128 41 128 42 15 1 ) 128 42 128 43 18446744073709551615 6 return 129 13 129 19 18446744073709551615 12 defaultValue 129 20 129 32 38 1 ; 129 32 129 33 18446744073709551615 6 return 131 9 131 15 18446744073709551615 3 Tmx 131 16 131 19 2 2 :: 131 19 131 21 18446744073709551615 5 Color 131 21 131 26 30 1 ( 131 26 131 27 30 5 value 131 27 131 32 20 1 ) 131 32 131 33 30 1 ; 131 33 131 34 18446744073709551615 1 } 132 5 132 6 18446744073709551615 1 } 133 1 133 2 18446744073709551615 0 0 39 0 0 0 22 0 0 1 3 0 8 tinyxml2 4 1 3 0 19 XMLElement:tinyxml2 22 1 3 0 3 Tmx 5 1 3 0 16 PropertyType:Tmx 7 1 3 0 36 TMX_PROPERTY_STRING:PropertyType:Tmx 7 1 3 0 34 TMX_PROPERTY_BOOL:PropertyType:Tmx 7 1 3 0 33 TMX_PROPERTY_INT:PropertyType:Tmx 7 1 3 0 35 TMX_PROPERTY_FLOAT:PropertyType:Tmx 7 1 3 0 35 TMX_PROPERTY_COLOR:PropertyType:Tmx 7 1 3 0 34 TMX_PROPERTY_FILE:PropertyType:Tmx 4 1 3 0 12 Property:Tmx 21 1 3 0 18 Parse:Property:Tmx 10 1 3 0 113 72:48:/home/smallwondertech/Gamez/Allegro5TiledRenderer/Allegro5TiledRenderer/lib/tmxparser/include/TmxProperty.h 21 1 3 0 20 GetType:Property:Tmx 6 1 3 0 17 type:Property:Tmx 21 1 3 0 21 IsOfType:Property:Tmx 10 1 3 0 113 78:36:/home/smallwondertech/Gamez/Allegro5TiledRenderer/Allegro5TiledRenderer/lib/tmxparser/include/TmxProperty.h 22 1 3 0 3 std 21 1 3 0 21 GetValue:Property:Tmx 20 1 3 0 18 string:__cxx11:std 6 1 3 0 18 value:Property:Tmx 21 1 3 0 25 IsValueEmpty:Property:Tmx 21 1 3 0 30 empty:basic_string:__cxx11:std 21 1 3 0 25 GetBoolValue:Property:Tmx 10 1 3 0 113 87:32:/home/smallwondertech/Gamez/Allegro5TiledRenderer/Allegro5TiledRenderer/lib/tmxparser/include/TmxProperty.h 21 1 3 0 24 GetIntValue:Property:Tmx 10 1 3 0 113 90:29:/home/smallwondertech/Gamez/Allegro5TiledRenderer/Allegro5TiledRenderer/lib/tmxparser/include/TmxProperty.h 21 1 3 0 26 GetFloatValue:Property:Tmx 10 1 3 0 113 93:35:/home/smallwondertech/Gamez/Allegro5TiledRenderer/Allegro5TiledRenderer/lib/tmxparser/include/TmxProperty.h 21 1 3 0 26 GetColorValue:Property:Tmx 4 1 3 0 9 Color:Tmx 10 1 3 0 113 96:45:/home/smallwondertech/Gamez/Allegro5TiledRenderer/Allegro5TiledRenderer/lib/tmxparser/include/TmxProperty.h 10 1 3 0 114 102:45:/home/smallwondertech/Gamez/Allegro5TiledRenderer/Allegro5TiledRenderer/lib/tmxparser/include/TmxProperty.h 21 1 3 0 32 compare:basic_string:__cxx11:std 10 1 3 0 114 110:42:/home/smallwondertech/Gamez/Allegro5TiledRenderer/Allegro5TiledRenderer/lib/tmxparser/include/TmxProperty.h 8 1 3 0 16 stoi:__cxx11:std 10 1 3 0 114 118:48:/home/smallwondertech/Gamez/Allegro5TiledRenderer/Allegro5TiledRenderer/lib/tmxparser/include/TmxProperty.h 8 1 3 0 16 stof:__cxx11:std 10 1 3 0 114 126:58:/home/smallwondertech/Gamez/Allegro5TiledRenderer/Allegro5TiledRenderer/lib/tmxparser/include/TmxProperty.h 0 0 2 0 0 0 104 /home/smallwondertech/Gamez/Allegro5TiledRenderer/Allegro5TiledRenderer/lib/tmxparser/include/TmxColor.h 1571011912 107 /home/smallwondertech/Gamez/Allegro5TiledRenderer/Allegro5TiledRenderer/lib/tmxparser/include/TmxProperty.h 1571011912