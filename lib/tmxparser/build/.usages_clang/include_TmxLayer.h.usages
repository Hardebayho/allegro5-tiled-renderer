22 serialization::archive 15 0 0 0 0 85 /home/smallwondertech/Gamez/Allegro5TiledRenderer/Allegro5TiledRenderer/lib/tmxparser 91 /home/smallwondertech/Gamez/Allegro5TiledRenderer/Allegro5TiledRenderer/lib/tmxparser/build 0 0 432 0 0 0 79 //----------------------------------------------------------------------------- 1 1 1 80 18446744073709551615 13 // TmxLayer.h 2 1 2 14 18446744073709551615 2 // 3 1 3 3 18446744073709551615 39 // Copyright (c) 2010-2014, Tamir Atias 4 1 4 40 18446744073709551615 23 // All rights reserved. 5 1 5 24 18446744073709551615 2 // 6 1 6 3 18446744073709551615 69 // Redistribution and use in source and binary forms, with or without 7 1 7 70 18446744073709551615 78 // modification, are permitted provided that the following conditions are met: 8 1 8 79 18446744073709551615 68 //  * Redistributions of source code must retain the above copyright 9 1 9 69 18446744073709551615 67 //    notice, this list of conditions and the following disclaimer. 10 1 10 68 18446744073709551615 71 //  * Redistributions in binary form must reproduce the above copyright 11 1 11 72 18446744073709551615 73 //    notice, this list of conditions and the following disclaimer in the 12 1 12 74 18446744073709551615 74 //    documentation and/or other materials provided with the distribution. 13 1 13 75 18446744073709551615 2 // 14 1 14 3 18446744073709551615 82 // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND 15 1 15 83 18446744073709551615 80 // ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED 16 1 16 81 18446744073709551615 73 // WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE 17 1 17 74 18446744073709551615 62 // DISCLAIMED. IN NO EVENT SHALL TAMIR ATIAS BE LIABLE FOR ANY 18 1 18 63 18446744073709551615 77 // DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES 19 1 19 78 18446744073709551615 79 // (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 20 1 20 80 18446744073709551615 78 // LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND 21 1 21 79 18446744073709551615 77 // ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT 22 1 22 78 18446744073709551615 80 // (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS 23 1 23 81 18446744073709551615 63 // SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. 24 1 24 64 18446744073709551615 2 // 25 1 25 3 18446744073709551615 22 // Author: Tamir Atias 26 1 26 23 18446744073709551615 79 //----------------------------------------------------------------------------- 27 1 27 80 18446744073709551615 1 # 28 1 28 2 18446744073709551615 6 pragma 28 2 28 8 18446744073709551615 4 once 28 9 28 13 18446744073709551615 1 # 30 1 30 2 18446744073709551615 7 include 30 2 30 9 18446744073709551615 1 < 30 10 30 11 18446744073709551615 6 string 30 11 30 17 18446744073709551615 1 > 30 17 30 18 18446744073709551615 1 # 32 1 32 2 18446744073709551615 7 include 32 2 32 9 18446744073709551615 18 "TmxPropertySet.h" 32 10 32 28 18446744073709551615 1 # 33 1 33 2 18446744073709551615 7 include 33 2 33 9 18446744073709551615 14 "TmxMapTile.h" 33 10 33 24 18446744073709551615 9 namespace 35 1 35 10 18446744073709551615 8 tinyxml2 35 11 35 19 0 1 { 35 20 35 21 18446744073709551615 5 class 36 5 36 10 18446744073709551615 7 XMLNode 36 11 36 18 1 1 ; 36 18 36 19 18446744073709551615 1 } 37 1 37 2 18446744073709551615 9 namespace 39 1 39 10 18446744073709551615 3 Tmx 39 11 39 14 2 1 { 40 1 40 2 18446744073709551615 5 class 41 5 41 10 18446744073709551615 3 Map 41 11 41 14 3 1 ; 41 14 41 15 18446744073709551615 5 class 42 3 42 8 18446744073709551615 4 Tile 42 9 42 13 4 1 ; 42 13 42 14 18446744073709551615 4 enum 43 5 43 9 18446744073709551615 9 LayerType 43 10 43 19 5 1 { 44 5 44 6 18446744073709551615 18 TMX_LAYERTYPE_TILE 45 9 45 27 6 1 = 45 35 45 36 18446744073709551615 4 0X01 45 37 45 41 18446744073709551615 1 , 45 41 45 42 18446744073709551615 25 TMX_LAYERTYPE_OBJECTGROUP 46 9 46 34 7 1 = 46 35 46 36 18446744073709551615 4 0X02 46 37 46 41 18446744073709551615 1 , 46 41 46 42 18446744073709551615 25 TMX_LAYERTYPE_IMAGE_LAYER 47 9 47 34 8 1 = 47 35 47 36 18446744073709551615 4 0X04 47 37 47 41 18446744073709551615 1 , 47 41 47 42 18446744073709551615 25 TMX_LAYERTYPE_GROUP_LAYER 48 9 48 34 9 1 = 48 35 48 36 18446744073709551615 4 0X08 48 37 48 41 18446744073709551615 1 } 49 5 49 6 18446744073709551615 1 ; 49 6 49 7 18446744073709551615 75 //------------------------------------------------------------------------- 51 5 51 80 18446744073709551615 37 /// Base class for other layer types. 52 5 52 42 18446744073709551615 75 //------------------------------------------------------------------------- 53 5 53 80 18446744073709551615 5 class 54 5 54 10 18446744073709551615 5 Layer 54 11 54 16 10 1 { 55 5 55 6 18446744073709551615 7 private 56 5 56 12 18446744073709551615 1 : 56 12 56 13 18446744073709551615 28 // Prevent copy constructor. 57 9 57 37 18446744073709551615 5 Layer 58 9 58 14 10 1 ( 58 14 58 15 10 5 const 58 15 58 20 18446744073709551615 5 Layer 58 21 58 26 10 1 & 58 27 58 28 18446744073709551615 6 _layer 58 28 58 34 11 1 ) 58 34 58 35 10 1 ; 58 35 58 36 18446744073709551615 6 public 60 5 60 11 18446744073709551615 1 : 60 11 60 12 18446744073709551615 53 /// Construct a new Layer used by a map's objectgroup 61 9 61 62 18446744073709551615 5 Layer 62 9 62 14 10 1 ( 62 14 62 15 10 5 const 62 15 62 20 18446744073709551615 3 Tmx 62 21 62 24 2 2 :: 62 24 62 26 18446744073709551615 3 Map 62 26 62 29 3 1 * 62 30 62 31 18446744073709551615 4 _map 62 31 62 35 12 1 , 62 35 62 36 10 5 const 62 37 62 42 18446744073709551615 3 std 62 43 62 46 13 2 :: 62 46 62 48 18446744073709551615 6 string 62 48 62 54 14 5 _name 62 55 62 60 15 1 , 62 60 62 61 10 5 const 62 62 62 67 18446744073709551615 3 int 62 68 62 71 18446744073709551615 2 _x 62 72 62 74 16 1 , 62 74 62 75 10 5 const 62 76 62 81 18446744073709551615 3 int 62 82 62 85 18446744073709551615 2 _y 62 86 62 88 17 1 , 62 88 62 89 10 5 const 63 15 63 20 18446744073709551615 3 int 63 21 63 24 18446744073709551615 6 _width 63 25 63 31 18 1 , 63 31 63 32 10 5 const 63 33 63 38 18446744073709551615 3 int 63 39 63 42 18446744073709551615 7 _height 63 43 63 50 19 1 , 63 50 63 51 10 5 const 63 52 63 57 18446744073709551615 5 float 63 58 63 63 18446744073709551615 8 _opacity 63 64 63 72 20 1 , 63 72 63 73 10 5 const 63 74 63 79 18446744073709551615 4 bool 63 80 63 84 18446744073709551615 8 _visible 63 85 63 93 21 1 , 63 93 63 94 10 5 const 63 95 63 100 18446744073709551615 9 LayerType 63 101 63 110 5 10 _layerType 63 111 63 121 22 1 ) 63 121 63 122 10 1 ; 63 122 63 123 18446744073709551615 54 /// Construct a new layer used by a tile's objectgroup 65 5 65 59 18446744073709551615 5 Layer 66 5 66 10 10 1 ( 66 10 66 11 10 5 const 66 11 66 16 18446744073709551615 3 Tmx 66 17 66 20 2 2 :: 66 20 66 22 18446744073709551615 4 Tile 66 22 66 26 4 1 * 66 27 66 28 18446744073709551615 5 _tile 66 28 66 33 23 1 , 66 33 66 34 10 5 const 66 35 66 40 18446744073709551615 3 std 66 41 66 44 13 2 :: 66 44 66 46 18446744073709551615 6 string 66 46 66 52 14 5 _name 66 53 66 58 24 1 , 66 58 66 59 10 5 const 66 60 66 65 18446744073709551615 3 int 66 66 66 69 18446744073709551615 2 _x 66 70 66 72 25 1 , 66 72 66 73 10 5 const 66 74 66 79 18446744073709551615 3 int 66 80 66 83 18446744073709551615 2 _y 66 84 66 86 26 1 , 66 86 66 87 10 5 const 67 15 67 20 18446744073709551615 3 int 67 21 67 24 18446744073709551615 6 _width 67 25 67 31 27 1 , 67 31 67 32 10 5 const 67 33 67 38 18446744073709551615 3 int 67 39 67 42 18446744073709551615 7 _height 67 43 67 50 28 1 , 67 50 67 51 10 5 const 67 52 67 57 18446744073709551615 5 float 67 58 67 63 18446744073709551615 8 _opacity 67 64 67 72 29 1 , 67 72 67 73 10 5 const 67 74 67 79 18446744073709551615 4 bool 67 80 67 84 18446744073709551615 8 _visible 67 85 67 93 30 1 , 67 93 67 94 10 5 const 67 95 67 100 18446744073709551615 9 LayerType 67 101 67 110 5 10 _layerType 67 111 67 121 31 1 ) 67 121 67 122 10 1 ; 67 122 67 123 18446744073709551615 7 virtual 69 9 69 16 18446744073709551615 1 ~ 69 17 69 18 18446744073709551615 5 Layer 69 18 69 23 10 1 ( 69 23 69 24 18446744073709551615 1 ) 69 24 69 25 18446744073709551615 1 ; 69 25 69 26 18446744073709551615 26 /// Parse a layer element. 71 9 71 35 18446744073709551615 7 virtual 72 9 72 16 18446744073709551615 4 void 72 17 72 21 18446744073709551615 5 Parse 72 22 72 27 32 1 ( 72 27 72 28 32 5 const 72 28 72 33 18446744073709551615 8 tinyxml2 72 34 72 42 0 2 :: 72 42 72 44 18446744073709551615 7 XMLNode 72 44 72 51 1 1 * 72 52 72 53 18446744073709551615 9 layerNode 72 53 72 62 33 1 ) 72 62 72 63 32 1 = 72 64 72 65 32 1 0 72 66 72 67 18446744073709551615 1 ; 72 67 72 68 18446744073709551615 38 /// Get the pointer to the parent map. 74 9 74 47 18446744073709551615 5 const 75 9 75 14 18446744073709551615 3 Tmx 75 15 75 18 2 2 :: 75 18 75 20 34 3 Map 75 20 75 23 3 1 * 75 24 75 25 34 9 mapGetMap 75 25 75 34 34 1 ( 75 34 75 35 34 1 ) 75 35 75 36 34 5 const 75 37 75 42 18446744073709551615 1 { 75 43 75 44 18446744073709551615 6 return 75 45 75 51 18446744073709551615 3 map 75 52 75 55 35 1 ; 75 55 75 56 18446744073709551615 1 } 75 57 75 58 18446744073709551615 30 /// Get the name of the layer. 77 9 77 39 18446744073709551615 5 const 78 9 78 14 18446744073709551615 3 std 78 15 78 18 13 2 :: 78 18 78 20 36 6 string 78 20 78 26 14 1 & 78 27 78 28 36 7 GetName 78 28 78 35 36 1 ( 78 35 78 36 36 1 ) 78 36 78 37 36 5 const 78 38 78 43 18446744073709551615 1 { 78 44 78 45 18446744073709551615 6 return 78 46 78 52 18446744073709551615 4 name 78 53 78 57 37 1 ; 78 57 78 58 18446744073709551615 1 } 78 59 78 60 18446744073709551615 100 /// Get the value of the x attribute of the layer. Means different things for different layer types. 80 9 80 109 18446744073709551615 3 int 81 9 81 12 18446744073709551615 4 GetX 81 13 81 17 38 1 ( 81 17 81 18 38 1 ) 81 18 81 19 38 5 const 81 20 81 25 18446744073709551615 1 { 81 26 81 27 18446744073709551615 6 return 81 28 81 34 18446744073709551615 1 x 81 35 81 36 39 1 ; 81 36 81 37 18446744073709551615 1 } 81 38 81 39 18446744073709551615 100 /// Get the value of the y attribute of the layer. Means different things for different layer types. 83 9 83 109 18446744073709551615 3 int 84 9 84 12 18446744073709551615 4 GetY 84 13 84 17 40 1 ( 84 17 84 18 40 1 ) 84 18 84 19 40 5 const 84 20 84 25 18446744073709551615 1 { 84 26 84 27 18446744073709551615 6 return 84 28 84 34 18446744073709551615 1 y 84 35 84 36 41 1 ; 84 36 84 37 18446744073709551615 1 } 84 38 84 39 18446744073709551615 67 /// Get the width of the layer, in tiles. Only used in tile layers. 86 9 86 76 18446744073709551615 3 int 87 9 87 12 18446744073709551615 8 GetWidth 87 13 87 21 42 1 ( 87 21 87 22 42 1 ) 87 22 87 23 42 5 const 87 24 87 29 18446744073709551615 1 { 87 30 87 31 18446744073709551615 6 return 87 32 87 38 18446744073709551615 5 width 87 39 87 44 43 1 ; 87 44 87 45 18446744073709551615 1 } 87 46 87 47 18446744073709551615 68 /// Get the height of the layer, in tiles. Only used in tile layers. 89 9 89 77 18446744073709551615 3 int 90 9 90 12 18446744073709551615 9 GetHeight 90 13 90 22 44 1 ( 90 22 90 23 44 1 ) 90 23 90 24 44 5 const 90 25 90 30 18446744073709551615 1 { 90 31 90 32 18446744073709551615 6 return 90 33 90 39 18446744073709551615 6 height 90 40 90 46 45 1 ; 90 46 90 47 18446744073709551615 1 } 90 48 90 49 18446744073709551615 33 /// Get the opacity of the layer. 92 9 92 42 18446744073709551615 5 float 93 9 93 14 18446744073709551615 10 GetOpacity 93 15 93 25 46 1 ( 93 25 93 26 46 1 ) 93 26 93 27 46 5 const 93 28 93 33 18446744073709551615 1 { 93 34 93 35 18446744073709551615 6 return 93 36 93 42 18446744073709551615 7 opacity 93 43 93 50 47 1 ; 93 50 93 51 18446744073709551615 1 } 93 52 93 53 18446744073709551615 35 /// Get the visibility of the layer 95 9 95 44 18446744073709551615 4 bool 96 9 96 13 18446744073709551615 9 IsVisible 96 14 96 23 48 1 ( 96 23 96 24 48 1 ) 96 24 96 25 48 5 const 96 26 96 31 18446744073709551615 1 { 96 32 96 33 18446744073709551615 6 return 96 34 96 40 18446744073709551615 7 visible 96 41 96 48 49 1 ; 96 48 96 49 18446744073709551615 1 } 96 50 96 51 18446744073709551615 25 /// Get the property set. 98 9 98 34 18446744073709551615 5 const 99 9 99 14 18446744073709551615 3 Tmx 99 15 99 18 2 2 :: 99 18 99 20 50 11 PropertySet 99 20 99 31 51 1 & 99 32 99 33 50 13 GetProperties 99 33 99 46 50 1 ( 99 46 99 47 50 1 ) 99 47 99 48 50 5 const 99 49 99 54 18446744073709551615 1 { 99 55 99 56 18446744073709551615 6 return 99 57 99 63 18446744073709551615 10 properties 99 64 99 74 52 1 ; 99 74 99 75 18446744073709551615 1 } 99 76 99 77 18446744073709551615 32 /// Get the zorder of the layer. 101 9 101 41 18446744073709551615 3 int 102 9 102 12 18446744073709551615 9 GetZOrder 102 13 102 22 53 1 ( 102 22 102 23 53 1 ) 102 23 102 24 53 5 const 102 25 102 30 18446744073709551615 1 { 102 31 102 32 18446744073709551615 6 return 102 33 102 39 18446744073709551615 6 zOrder 102 40 102 46 54 1 ; 102 46 102 47 18446744073709551615 1 } 102 48 102 49 18446744073709551615 32 /// Set the zorder of the layer. 104 9 104 41 18446744073709551615 4 void 105 9 105 13 18446744073709551615 9 SetZOrder 105 14 105 23 55 1 ( 105 23 105 24 55 3 int 105 25 105 28 18446744073709551615 1 z 105 29 105 30 56 1 ) 105 31 105 32 55 1 { 105 33 105 34 18446744073709551615 6 zOrder 105 35 105 41 54 1 = 105 42 105 43 18446744073709551615 1 z 105 44 105 45 56 1 ; 105 45 105 46 18446744073709551615 1 } 105 47 105 48 18446744073709551615 37 /// Get the parse order of the layer. 107 9 107 46 18446744073709551615 3 int 108 9 108 12 18446744073709551615 13 GetParseOrder 108 13 108 26 57 1 ( 108 26 108 27 57 1 ) 108 27 108 28 57 5 const 108 29 108 34 18446744073709551615 1 { 108 35 108 36 18446744073709551615 6 return 108 37 108 43 18446744073709551615 10 parseOrder 108 44 108 54 58 1 ; 108 54 108 55 18446744073709551615 1 } 108 56 108 57 18446744073709551615 30 /// Get the type of the layer. 110 9 110 39 18446744073709551615 3 Tmx 111 9 111 12 2 2 :: 111 12 111 14 59 9 LayerType 111 14 111 23 5 12 GetLayerType 111 24 111 36 59 1 ( 111 36 111 37 59 1 ) 111 37 111 38 59 5 const 111 39 111 44 18446744073709551615 1 { 111 45 111 46 18446744073709551615 6 return 111 47 111 53 18446744073709551615 9 layerType 111 54 111 63 60 1 ; 111 63 111 64 18446744073709551615 1 } 111 65 111 66 18446744073709551615 9 protected 113 5 113 14 18446744073709551615 1 : 113 14 113 15 18446744073709551615 18 /// @cond INTERNAL 114 9 114 27 18446744073709551615 5 const 115 9 115 14 18446744073709551615 3 Tmx 115 15 115 18 2 2 :: 115 18 115 20 18446744073709551615 3 Map 115 20 115 23 3 1 * 115 24 115 25 18446744073709551615 3 map 115 25 115 28 35 1 ; 115 28 115 29 18446744073709551615 5 const 116 5 116 10 18446744073709551615 3 Tmx 116 11 116 14 2 2 :: 116 14 116 16 18446744073709551615 4 Tile 116 16 116 20 4 1 * 116 21 116 22 18446744073709551615 4 tile 116 22 116 26 61 1 ; 116 26 116 27 18446744073709551615 3 std 117 9 117 12 13 2 :: 117 12 117 14 18446744073709551615 6 string 117 14 117 20 14 4 name 117 21 117 25 37 1 ; 117 25 117 26 18446744073709551615 3 int 119 9 119 12 18446744073709551615 1 x 119 13 119 14 39 1 ; 119 14 119 15 18446744073709551615 3 int 120 9 120 12 18446744073709551615 1 y 120 13 120 14 41 1 ; 120 14 120 15 18446744073709551615 3 int 121 9 121 12 18446744073709551615 5 width 121 13 121 18 43 1 ; 121 18 121 19 18446744073709551615 3 int 122 9 122 12 18446744073709551615 6 height 122 13 122 19 45 1 ; 122 19 122 20 18446744073709551615 5 float 124 9 124 14 18446744073709551615 7 opacity 124 15 124 22 47 1 ; 124 22 124 23 18446744073709551615 4 bool 125 9 125 13 18446744073709551615 7 visible 125 14 125 21 49 1 ; 125 21 125 22 18446744073709551615 3 int 126 9 126 12 18446744073709551615 6 zOrder 126 13 126 19 54 1 ; 126 19 126 20 18446744073709551615 5 const 127 9 127 14 18446744073709551615 3 int 127 15 127 18 18446744073709551615 10 parseOrder 127 19 127 29 58 1 ; 127 29 127 30 18446744073709551615 5 const 129 9 129 14 18446744073709551615 3 Tmx 129 15 129 18 2 2 :: 129 18 129 20 18446744073709551615 9 LayerType 129 20 129 29 5 9 layerType 129 30 129 39 60 1 ; 129 39 129 40 18446744073709551615 3 Tmx 131 9 131 12 2 2 :: 131 12 131 14 18446744073709551615 11 PropertySet 131 14 131 25 51 10 properties 131 26 131 36 52 1 ; 131 36 131 37 18446744073709551615 6 static 133 9 133 15 18446744073709551615 3 int 133 16 133 19 18446744073709551615 14 nextParseOrder 133 20 133 34 62 1 ; 133 34 133 35 18446744073709551615 12 /// @endcond 134 9 134 21 18446744073709551615 1 } 135 5 135 6 18446744073709551615 1 ; 135 6 135 7 18446744073709551615 1 } 136 1 136 2 18446744073709551615 0 0 63 0 0 0 22 0 0 1 3 0 8 tinyxml2 4 1 3 0 16 XMLNode:tinyxml2 22 1 3 0 3 Tmx 4 1 3 0 7 Map:Tmx 4 1 3 0 8 Tile:Tmx 5 1 3 0 13 LayerType:Tmx 7 1 3 0 32 TMX_LAYERTYPE_TILE:LayerType:Tmx 7 1 3 0 39 TMX_LAYERTYPE_OBJECTGROUP:LayerType:Tmx 7 1 3 0 39 TMX_LAYERTYPE_IMAGE_LAYER:LayerType:Tmx 7 1 3 0 39 TMX_LAYERTYPE_GROUP_LAYER:LayerType:Tmx 4 1 3 0 9 Layer:Tmx 10 1 3 0 110 58:28:/home/smallwondertech/Gamez/Allegro5TiledRenderer/Allegro5TiledRenderer/lib/tmxparser/include/TmxLayer.h 10 1 3 0 110 62:31:/home/smallwondertech/Gamez/Allegro5TiledRenderer/Allegro5TiledRenderer/lib/tmxparser/include/TmxLayer.h 22 1 3 0 3 std 20 1 3 0 18 string:__cxx11:std 10 1 3 0 110 62:55:/home/smallwondertech/Gamez/Allegro5TiledRenderer/Allegro5TiledRenderer/lib/tmxparser/include/TmxLayer.h 10 1 3 0 110 62:72:/home/smallwondertech/Gamez/Allegro5TiledRenderer/Allegro5TiledRenderer/lib/tmxparser/include/TmxLayer.h 10 1 3 0 110 62:86:/home/smallwondertech/Gamez/Allegro5TiledRenderer/Allegro5TiledRenderer/lib/tmxparser/include/TmxLayer.h 10 1 3 0 110 63:25:/home/smallwondertech/Gamez/Allegro5TiledRenderer/Allegro5TiledRenderer/lib/tmxparser/include/TmxLayer.h 10 1 3 0 110 63:43:/home/smallwondertech/Gamez/Allegro5TiledRenderer/Allegro5TiledRenderer/lib/tmxparser/include/TmxLayer.h 10 1 3 0 110 63:64:/home/smallwondertech/Gamez/Allegro5TiledRenderer/Allegro5TiledRenderer/lib/tmxparser/include/TmxLayer.h 10 1 3 0 110 63:85:/home/smallwondertech/Gamez/Allegro5TiledRenderer/Allegro5TiledRenderer/lib/tmxparser/include/TmxLayer.h 10 1 3 0 111 63:111:/home/smallwondertech/Gamez/Allegro5TiledRenderer/Allegro5TiledRenderer/lib/tmxparser/include/TmxLayer.h 10 1 3 0 110 66:28:/home/smallwondertech/Gamez/Allegro5TiledRenderer/Allegro5TiledRenderer/lib/tmxparser/include/TmxLayer.h 10 1 3 0 110 66:53:/home/smallwondertech/Gamez/Allegro5TiledRenderer/Allegro5TiledRenderer/lib/tmxparser/include/TmxLayer.h 10 1 3 0 110 66:70:/home/smallwondertech/Gamez/Allegro5TiledRenderer/Allegro5TiledRenderer/lib/tmxparser/include/TmxLayer.h 10 1 3 0 110 66:84:/home/smallwondertech/Gamez/Allegro5TiledRenderer/Allegro5TiledRenderer/lib/tmxparser/include/TmxLayer.h 10 1 3 0 110 67:25:/home/smallwondertech/Gamez/Allegro5TiledRenderer/Allegro5TiledRenderer/lib/tmxparser/include/TmxLayer.h 10 1 3 0 110 67:43:/home/smallwondertech/Gamez/Allegro5TiledRenderer/Allegro5TiledRenderer/lib/tmxparser/include/TmxLayer.h 10 1 3 0 110 67:64:/home/smallwondertech/Gamez/Allegro5TiledRenderer/Allegro5TiledRenderer/lib/tmxparser/include/TmxLayer.h 10 1 3 0 110 67:85:/home/smallwondertech/Gamez/Allegro5TiledRenderer/Allegro5TiledRenderer/lib/tmxparser/include/TmxLayer.h 10 1 3 0 111 67:111:/home/smallwondertech/Gamez/Allegro5TiledRenderer/Allegro5TiledRenderer/lib/tmxparser/include/TmxLayer.h 21 1 3 0 15 Parse:Layer:Tmx 10 1 3 0 110 72:53:/home/smallwondertech/Gamez/Allegro5TiledRenderer/Allegro5TiledRenderer/lib/tmxparser/include/TmxLayer.h 21 1 3 0 19 mapGetMap:Layer:Tmx 6 1 3 0 13 map:Layer:Tmx 21 1 3 0 17 GetName:Layer:Tmx 6 1 3 0 14 name:Layer:Tmx 21 1 3 0 14 GetX:Layer:Tmx 6 1 3 0 11 x:Layer:Tmx 21 1 3 0 14 GetY:Layer:Tmx 6 1 3 0 11 y:Layer:Tmx 21 1 3 0 18 GetWidth:Layer:Tmx 6 1 3 0 15 width:Layer:Tmx 21 1 3 0 19 GetHeight:Layer:Tmx 6 1 3 0 16 height:Layer:Tmx 21 1 3 0 20 GetOpacity:Layer:Tmx 6 1 3 0 17 opacity:Layer:Tmx 21 1 3 0 19 IsVisible:Layer:Tmx 6 1 3 0 17 visible:Layer:Tmx 21 1 3 0 23 GetProperties:Layer:Tmx 4 1 3 0 15 PropertySet:Tmx 6 1 3 0 20 properties:Layer:Tmx 21 1 3 0 19 GetZOrder:Layer:Tmx 6 1 3 0 16 zOrder:Layer:Tmx 21 1 3 0 19 SetZOrder:Layer:Tmx 10 1 3 0 111 105:29:/home/smallwondertech/Gamez/Allegro5TiledRenderer/Allegro5TiledRenderer/lib/tmxparser/include/TmxLayer.h 21 1 3 0 23 GetParseOrder:Layer:Tmx 6 1 3 0 20 parseOrder:Layer:Tmx 21 1 3 0 22 GetLayerType:Layer:Tmx 6 1 3 0 19 layerType:Layer:Tmx 6 1 3 0 14 tile:Layer:Tmx 9 1 3 0 24 nextParseOrder:Layer:Tmx 0 0 5 0 0 0 104 /home/smallwondertech/Gamez/Allegro5TiledRenderer/Allegro5TiledRenderer/lib/tmxparser/include/TmxColor.h 1571011912 104 /home/smallwondertech/Gamez/Allegro5TiledRenderer/Allegro5TiledRenderer/lib/tmxparser/include/TmxLayer.h 1571011912 106 /home/smallwondertech/Gamez/Allegro5TiledRenderer/Allegro5TiledRenderer/lib/tmxparser/include/TmxMapTile.h 1571011912 107 /home/smallwondertech/Gamez/Allegro5TiledRenderer/Allegro5TiledRenderer/lib/tmxparser/include/TmxProperty.h 1571011912 110 /home/smallwondertech/Gamez/Allegro5TiledRenderer/Allegro5TiledRenderer/lib/tmxparser/include/TmxPropertySet.h 1571011912